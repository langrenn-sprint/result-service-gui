[tool.poetry]
authors = ["Stig B. Dørmænen <stigbd@gmail.com>", "Heming Harnæs <heming.harnaes@gmail.com"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
]
description = "An GUI for admin of sporting results"
homepage = "https://github.com/langrenn-sprint/result-service-gui"
license = "Apache-2.0"
name = "result_service_gui"
readme = "README.md"
repository = "https://github.com/langrenn-sprint/result-service-gui"
version = "2.0.0"

[tool.poetry.dependencies]
PyJWT = "^2.8.0"
aiohttp = "^3.9.5"
aiohttp-middlewares = "^2.2.1"
google-api-python-client = "^2.52.0"
google-auth-oauthlib = "^1.0.0"
google-cloud-pubsub = "^2.18.4"
google-cloud-storage = "^2.13.0"
google-cloud-vision = "^3.0.0"
gunicorn = "^22.0.0"
motor = "^3.3.2"
multidict = "^6.0.2"
numpy = "^1.26.2"
pandas = "^2.1.3"
python = ">=3.9,<4"
python-dotenv = "^1.0.0"
python-json-logger = "^2.0.2"
aiohttp-session = "^2.12.0"
jinja2 = "^3.1.2"
marshmallow = "^3.20.1"
aiohttp-jinja2 = "^1.6"
cryptography = "^42.0.5"


[tool.poetry.group.dev.dependencies]
aiohttp-devtools = "^1.1.2"
aioresponses = "^0.7.6"
black = "^24.3.0"
codecov = "^2.1.13"
coverage = "^7.3.2"
docker = "^7.0.0"
flake8 = "^7.0"
flake8-annotations = "^3.0.1"
flake8-bandit = "^4.1.1"
flake8-black = "^0.3.3"
flake8-bugbear = "^24.2.6"
flake8-docstrings = "^1.5.0"
flake8-import-order = "^0.18.1"
mypy = "^1.7.1"
nox = "^2024.3.2"
nox-poetry = "^1.0.3"
pep8-naming = "^0.14.1"
pytest = "^8.1.1"
pytest-aiohttp = "^1.0.5"
pytest-asyncio = "^0.23.0"
pytest-cov = "^5.0.0"
pytest-docker = "^3.1.0"
pytest-dotenv = "^0.5.2"
pytest-mock = "^3.12.0"
requests = "^2.31.0"
safety = "^3.1.0"
poetry = "^1.8.2"


[tool.coverage.paths]
source = ["result_service_gui", "*/site-packages"]

[tool.coverage.run]
branch = false
omit = ["*gunicorn_config.py"]
source = ["result_service_gui"]

[tool.coverage.report]
fail_under = 10
show_missing = true

[tool.mypy]
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict = false
warn_unreachable = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "gunicorn.*",
  "requests.*",
  "motor.*",
  "pytest_mock",
  "aioresponses.*",
  "pandas.*",
  "pythonjsonlogger.*",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
  "unit: marks tests as unit (fast)",
  "integration: marks tests as integration (slower)",
  "contract: marks test as contract (slow)",
]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]